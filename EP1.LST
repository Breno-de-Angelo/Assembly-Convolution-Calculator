     1                                  segment code
     2                                  ..start:
     3                                  	; iniciar os registros de segmento DS e SS e o ponteiro de pilha SP
     4 00000000 B8[0000]                	mov 		ax,data
     5 00000003 8ED8                    	mov 		ds,ax
     6 00000005 B8[0000]                	mov 		ax,stack
     7 00000008 8ED0                    	mov 		ss,ax
     8 0000000A BC[0001]                	mov 		sp,stacktop
     9                                  
    10 0000000D E8B100                      call video_setup
    11                                  
    12 00000010 C606[0000]0F                mov		byte[cor],branco_intenso
    13 00000015 B84100                      mov		ax,65
    14 00000018 50                          push		ax
    15 00000019 B85000                      mov		ax,80
    16 0000001C 50                          push		ax
    17 0000001D B80000                      mov		ax,0
    18 00000020 50                          push		ax
    19 00000021 B85000                      mov		ax,80
    20 00000024 50                          push		ax
    21 00000025 E8C602                      call		line
    22                                  
    23 00000028 C606[0000]0F            	mov		byte[cor],branco_intenso
    24 0000002D B84100                      mov		ax,65
    25 00000030 50                          push		ax
    26 00000031 B8A000                      mov		ax,160
    27 00000034 50                          push		ax
    28 00000035 B80000                      mov		ax,0
    29 00000038 50                          push		ax
    30 00000039 B8A000                      mov		ax,160
    31 0000003C 50                          push		ax
    32 0000003D E8AE02                      call		line
    33                                  
    34 00000040 C606[0000]0F            	mov		byte[cor],branco_intenso
    35 00000045 B84100                      mov		ax,65
    36 00000048 50                          push		ax
    37 00000049 B8F000                      mov		ax,240
    38 0000004C 50                          push		ax
    39 0000004D B80000                      mov		ax,0
    40 00000050 50                          push		ax
    41 00000051 B8F000                      mov		ax,240
    42 00000054 50                          push		ax
    43 00000055 E89602                      call		line
    44                                  
    45 00000058 C606[0000]0F            	mov		byte[cor],branco_intenso
    46 0000005D B84100                      mov		ax,65
    47 00000060 50                          push		ax
    48 00000061 B84001                      mov		ax,320
    49 00000064 50                          push		ax
    50 00000065 B80000                      mov		ax,0
    51 00000068 50                          push		ax
    52 00000069 B84001                      mov		ax,320
    53 0000006C 50                          push		ax
    54 0000006D E87E02                      call		line
    55                                  
    56 00000070 C606[0000]0F            	mov		byte[cor],branco_intenso
    57 00000075 B84100                      mov		ax,65
    58 00000078 50                          push		ax
    59 00000079 B89001                      mov		ax,400
    60 0000007C 50                          push		ax
    61 0000007D B80000                      mov		ax,0
    62 00000080 50                          push		ax
    63 00000081 B89001                      mov		ax,400
    64 00000084 50                          push		ax
    65 00000085 E86602                      call		line
    66                                  
    67 00000088 C606[0000]0F            	mov		byte[cor],branco_intenso
    68 0000008D B84100                      mov		ax,65
    69 00000090 50                          push		ax
    70 00000091 B80000                      mov		ax,0
    71 00000094 50                          push		ax
    72 00000095 B84100                      mov		ax,65
    73 00000098 50                          push		ax
    74 00000099 B8E001                      mov		ax,480
    75 0000009C 50                          push		ax
    76 0000009D E84E02                      call		line
    77                                  
    78 000000A0 C606[0000]0F            	mov		byte[cor],branco_intenso
    79 000000A5 B628                    	mov		dh,40
    80 000000A7 B205                    	mov		dl,5
    81 000000A9 8D1E[0A00]              	lea		bx,[Abrir]
    82 000000AD E86500                  	call	write_string
    83                                  
    84 000000B0 E81C00                      call video_close
    85                                  
    86 000000B3 66B801000000                mov eax, 1
    87 000000B9 66BB00000000                mov ebx, 0
    88 000000BF CD80                        int 80h
    89                                  
    90                                  
    91                                  
    92                                  video_setup:
    93 000000C1 B40F                        mov  		ah,0Fh
    94 000000C3 CD10                        int  		10h
    95 000000C5 A2[0100]                    mov  		[modo_anterior],al   
    96 000000C8 B012                        mov     	al,12h
    97 000000CA B400                        mov     	ah,0
    98 000000CC CD10                        int     	10h
    99 000000CE C3                      	ret
   100                                  
   101                                  video_close:
   102 000000CF B408                        mov    	ah,08h
   103 000000D1 CD21                        int     21h
   104 000000D3 B400                        mov  	ah,0   			; set video mode
   105 000000D5 A0[0100]                    mov  	al,[modo_anterior]   	; modo anterior
   106 000000D8 CD10                        int  	10h
   107 000000DA B8004C                      mov     ax,4c00h
   108 000000DD CD21                        int     21h
   109 000000DF C3                      	ret
   110                                  
   111                                  cursor:
   112 000000E0 9C                      	pushf
   113 000000E1 50                      	push 		ax
   114 000000E2 53                      	push 		bx
   115 000000E3 51                      	push		cx
   116 000000E4 52                      	push		dx
   117 000000E5 56                      	push		si
   118 000000E6 57                      	push		di
   119 000000E7 55                      	push		bp
   120 000000E8 B402                    	mov     	ah,2
   121 000000EA B700                    	mov     	bh,0
   122 000000EC CD10                    	int     	10h
   123 000000EE 5D                      	pop		bp
   124 000000EF 5F                      	pop		di
   125 000000F0 5E                      	pop		si
   126 000000F1 5A                      	pop		dx
   127 000000F2 59                      	pop		cx
   128 000000F3 5B                      	pop		bx
   129 000000F4 58                      	pop		ax
   130 000000F5 9D                      	popf
   131 000000F6 C3                      	ret
   132                                  
   133                                  caracter:
   134 000000F7 9C                          pushf
   135 000000F8 50                          push 		ax
   136 000000F9 53                          push 		bx
   137 000000FA 51                          push		cx
   138 000000FB 52                          push		dx
   139 000000FC 56                          push		si
   140 000000FD 57                          push		di
   141 000000FE 55                          push		bp
   142 000000FF B409                        mov     	ah,9
   143 00000101 B700                        mov     	bh,0
   144 00000103 B90100                      mov     	cx,1
   145 00000106 8A1E[0000]                  mov     	bl,[cor]
   146 0000010A CD10                        int     	10h
   147 0000010C 5D                          pop		bp
   148 0000010D 5F                          pop		di
   149 0000010E 5E                          pop		si
   150 0000010F 5A                          pop		dx
   151 00000110 59                          pop		cx
   152 00000111 5B                          pop		bx
   153 00000112 58                          pop		ax
   154 00000113 9D                          popf
   155 00000114 C3                          ret
   156                                  
   157                                  write_string:
   158 00000115 8A07                    	mov		al,[bx]
   159 00000117 3C24                    	cmp		al,'$'
   160 00000119 7410                    	je		fim_write_string
   161 0000011B E8C2FF                  	call	cursor
   162 0000011E E8D6FF                  	call	caracter
   163 00000121 C3                      	ret
   164 00000122 E8CE02                  	call	delay
   165 00000125 43                      	inc		bx
   166 00000126 FEC2                    	inc		dl
   167 00000128 E9EAFF                  	jmp 	write_string
   168                                  fim_write_string:
   169 0000012B C3                      	ret
   170                                  	
   171                                  
   172                                  plot_xy:
   173 0000012C 55                          push		bp
   174 0000012D 89E5                        mov		bp,sp
   175 0000012F 9C                          pushf
   176 00000130 50                          push 		ax
   177 00000131 53                          push 		bx
   178 00000132 51                          push		cx
   179 00000133 52                          push		dx
   180 00000134 56                          push		si
   181 00000135 57                          push		di
   182 00000136 B40C                        mov     	ah,0ch
   183 00000138 A0[0000]                    mov     	al,[cor]
   184 0000013B B700                        mov     	bh,0
   185 0000013D BADF01                      mov     	dx,479
   186 00000140 2B5604                      sub		dx,[bp+4]
   187 00000143 8B4E06                      mov     	cx,[bp+6]
   188 00000146 CD10                        int     	10h
   189 00000148 5F                          pop		di
   190 00000149 5E                          pop		si
   191 0000014A 5A                          pop		dx
   192 0000014B 59                          pop		cx
   193 0000014C 5B                          pop		bx
   194 0000014D 58                          pop		ax
   195 0000014E 9D                          popf
   196 0000014F 5D                          pop		bp
   197 00000150 C20400                      ret		4
   198                                  
   199                                  circle:
   200 00000153 55                      	push 	bp
   201 00000154 89E5                    	mov	 	bp,sp
   202 00000156 9C                      	pushf                        ;coloca os flags na pilha
   203 00000157 50                      	push 	ax
   204 00000158 53                      	push 	bx
   205 00000159 51                      	push	cx
   206 0000015A 52                      	push	dx
   207 0000015B 56                      	push	si
   208 0000015C 57                      	push	di
   209                                  	
   210 0000015D 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   211 00000160 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   212 00000163 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   213                                  	
   214 00000166 89DA                    	mov 	dx,bx	
   215 00000168 01CA                    	add		dx,cx       ;ponto extremo superior
   216 0000016A 50                      	push    ax			
   217 0000016B 52                      	push	dx
   218 0000016C E8BDFF                  	call plot_xy
   219                                  	
   220 0000016F 89DA                    	mov		dx,bx
   221 00000171 29CA                    	sub		dx,cx       ;ponto extremo inferior
   222 00000173 50                      	push    ax			
   223 00000174 52                      	push	dx
   224 00000175 E8B4FF                  	call plot_xy
   225                                  	
   226 00000178 89C2                    	mov 	dx,ax	
   227 0000017A 01CA                    	add		dx,cx       ;ponto extremo direita
   228 0000017C 52                      	push    dx			
   229 0000017D 53                      	push	bx
   230 0000017E E8ABFF                  	call plot_xy
   231                                  	
   232 00000181 89C2                    	mov		dx,ax
   233 00000183 29CA                    	sub		dx,cx       ;ponto extremo esquerda
   234 00000185 52                      	push    dx			
   235 00000186 53                      	push	bx
   236 00000187 E8A2FF                  	call plot_xy
   237                                  		
   238 0000018A 89CF                    	mov		di,cx
   239 0000018C 81EF0100                	sub		di,1	 ;di=r-1
   240 00000190 BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   241                                  	
   242                                  stay:				;loop
   243 00000193 89FE                    	mov		si,di
   244 00000195 81FE0000                	cmp		si,0
   245 00000199 7F0E                    	jg		inf       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   246 0000019B 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   247 0000019D D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   248 0000019F 81C60300                	add		si,3
   249 000001A3 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   250 000001A5 42                      	inc		dx		;incrementa dx
   251 000001A6 E90E00                  	jmp		plotar
   252                                  inf:	
   253 000001A9 89D6                    	mov		si,dx
   254 000001AB 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   255 000001AD D1E6                    	sal		si,1
   256 000001AF 81C60500                	add		si,5
   257 000001B3 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   258 000001B5 42                      	inc		dx		;incrementa x (dx)
   259 000001B6 49                      	dec		cx		;decrementa y (cx)
   260                                  	
   261                                  plotar:	
   262 000001B7 89D6                    	mov		si,dx
   263 000001B9 01C6                    	add		si,ax
   264 000001BB 56                      	push    si			;coloca a abcisa x+xc na pilha
   265 000001BC 89CE                    	mov		si,cx
   266 000001BE 01DE                    	add		si,bx
   267 000001C0 56                      	push    si			;coloca a ordenada y+yc na pilha
   268 000001C1 E868FF                  	call plot_xy		;toma conta do segundo octante
   269 000001C4 89C6                    	mov		si,ax
   270 000001C6 01D6                    	add		si,dx
   271 000001C8 56                      	push    si			;coloca a abcisa xc+x na pilha
   272 000001C9 89DE                    	mov		si,bx
   273 000001CB 29CE                    	sub		si,cx
   274 000001CD 56                      	push    si			;coloca a ordenada yc-y na pilha
   275 000001CE E85BFF                  	call plot_xy		;toma conta do s�timo octante
   276 000001D1 89C6                    	mov		si,ax
   277 000001D3 01CE                    	add		si,cx
   278 000001D5 56                      	push    si			;coloca a abcisa xc+y na pilha
   279 000001D6 89DE                    	mov		si,bx
   280 000001D8 01D6                    	add		si,dx
   281 000001DA 56                      	push    si			;coloca a ordenada yc+x na pilha
   282 000001DB E84EFF                  	call plot_xy		;toma conta do segundo octante
   283 000001DE 89C6                    	mov		si,ax
   284 000001E0 01CE                    	add		si,cx
   285 000001E2 56                      	push    si			;coloca a abcisa xc+y na pilha
   286 000001E3 89DE                    	mov		si,bx
   287 000001E5 29D6                    	sub		si,dx
   288 000001E7 56                      	push    si			;coloca a ordenada yc-x na pilha
   289 000001E8 E841FF                  	call plot_xy		;toma conta do oitavo octante
   290 000001EB 89C6                    	mov		si,ax
   291 000001ED 29D6                    	sub		si,dx
   292 000001EF 56                      	push    si			;coloca a abcisa xc-x na pilha
   293 000001F0 89DE                    	mov		si,bx
   294 000001F2 01CE                    	add		si,cx
   295 000001F4 56                      	push    si			;coloca a ordenada yc+y na pilha
   296 000001F5 E834FF                  	call plot_xy		;toma conta do terceiro octante
   297 000001F8 89C6                    	mov		si,ax
   298 000001FA 29D6                    	sub		si,dx
   299 000001FC 56                      	push    si			;coloca a abcisa xc-x na pilha
   300 000001FD 89DE                    	mov		si,bx
   301 000001FF 29CE                    	sub		si,cx
   302 00000201 56                      	push    si			;coloca a ordenada yc-y na pilha
   303 00000202 E827FF                  	call plot_xy		;toma conta do sexto octante
   304 00000205 89C6                    	mov		si,ax
   305 00000207 29CE                    	sub		si,cx
   306 00000209 56                      	push    si			;coloca a abcisa xc-y na pilha
   307 0000020A 89DE                    	mov		si,bx
   308 0000020C 29D6                    	sub		si,dx
   309 0000020E 56                      	push    si			;coloca a ordenada yc-x na pilha
   310 0000020F E81AFF                  	call plot_xy		;toma conta do quinto octante
   311 00000212 89C6                    	mov		si,ax
   312 00000214 29CE                    	sub		si,cx
   313 00000216 56                      	push    si			;coloca a abcisa xc-y na pilha
   314 00000217 89DE                    	mov		si,bx
   315 00000219 01D6                    	add		si,dx
   316 0000021B 56                      	push    si			;coloca a ordenada yc-x na pilha
   317 0000021C E80DFF                  	call plot_xy		;toma conta do quarto octante
   318                                  	
   319 0000021F 39D1                    	cmp		cx,dx
   320 00000221 7203                    	jb		fim_circle  ;se cx (y) est� abaixo de dx (x), termina     
   321 00000223 E96DFF                  	jmp		stay		;se cx (y) est� acima de dx (x), continua no loop
   322                                  	
   323                                  	
   324                                  fim_circle:
   325 00000226 5F                      	pop		di
   326 00000227 5E                      	pop		si
   327 00000228 5A                      	pop		dx
   328 00000229 59                      	pop		cx
   329 0000022A 5B                      	pop		bx
   330 0000022B 58                      	pop		ax
   331 0000022C 9D                      	popf
   332 0000022D 5D                      	pop		bp
   333 0000022E C20600                  	ret		6
   334                                  
   335                                  full_circle:
   336 00000231 55                      	push 	bp
   337 00000232 89E5                    	mov	 	bp,sp
   338 00000234 9C                      	pushf                        ;coloca os flags na pilha
   339 00000235 50                      	push 	ax
   340 00000236 53                      	push 	bx
   341 00000237 51                      	push	cx
   342 00000238 52                      	push	dx
   343 00000239 56                      	push	si
   344 0000023A 57                      	push	di
   345                                  
   346 0000023B 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   347 0000023E 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   348 00000241 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   349                                  	
   350 00000244 89DE                    	mov		si,bx
   351 00000246 29CE                    	sub		si,cx
   352 00000248 50                      	push    ax			;coloca xc na pilha			
   353 00000249 56                      	push	si			;coloca yc-r na pilha
   354 0000024A 89DE                    	mov		si,bx
   355 0000024C 01CE                    	add		si,cx
   356 0000024E 50                      	push	ax		;coloca xc na pilha
   357 0000024F 56                      	push	si		;coloca yc+r na pilha
   358 00000250 E89B00                  	call line
   359                                  	
   360                                  		
   361 00000253 89CF                    	mov		di,cx
   362 00000255 81EF0100                	sub		di,1	 ;di=r-1
   363 00000259 BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   364                                  	
   365                                  stay_full:				;loop
   366 0000025C 89FE                    	mov		si,di
   367 0000025E 81FE0000                	cmp		si,0
   368 00000262 7F0E                    	jg		inf_full       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   369 00000264 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   370 00000266 D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   371 00000268 81C60300                	add		si,3
   372 0000026C 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   373 0000026E 42                      	inc		dx		;incrementa dx
   374 0000026F E90E00                  	jmp		plotar_full
   375                                  inf_full:	
   376 00000272 89D6                    	mov		si,dx
   377 00000274 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   378 00000276 D1E6                    	sal		si,1
   379 00000278 81C60500                	add		si,5
   380 0000027C 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   381 0000027E 42                      	inc		dx		;incrementa x (dx)
   382 0000027F 49                      	dec		cx		;decrementa y (cx)
   383                                  	
   384                                  plotar_full:	
   385 00000280 89C6                    	mov		si,ax
   386 00000282 01CE                    	add		si,cx
   387 00000284 56                      	push	si		;coloca a abcisa y+xc na pilha			
   388 00000285 89DE                    	mov		si,bx
   389 00000287 29D6                    	sub		si,dx
   390 00000289 56                      	push    si		;coloca a ordenada yc-x na pilha
   391 0000028A 89C6                    	mov		si,ax
   392 0000028C 01CE                    	add		si,cx
   393 0000028E 56                      	push	si		;coloca a abcisa y+xc na pilha	
   394 0000028F 89DE                    	mov		si,bx
   395 00000291 01D6                    	add		si,dx
   396 00000293 56                      	push    si		;coloca a ordenada yc+x na pilha	
   397 00000294 E85700                  	call 	line
   398                                  	
   399 00000297 89C6                    	mov		si,ax
   400 00000299 01D6                    	add		si,dx
   401 0000029B 56                      	push	si		;coloca a abcisa xc+x na pilha			
   402 0000029C 89DE                    	mov		si,bx
   403 0000029E 29CE                    	sub		si,cx
   404 000002A0 56                      	push    si		;coloca a ordenada yc-y na pilha
   405 000002A1 89C6                    	mov		si,ax
   406 000002A3 01D6                    	add		si,dx
   407 000002A5 56                      	push	si		;coloca a abcisa xc+x na pilha	
   408 000002A6 89DE                    	mov		si,bx
   409 000002A8 01CE                    	add		si,cx
   410 000002AA 56                      	push    si		;coloca a ordenada yc+y na pilha	
   411 000002AB E84000                  	call	line
   412                                  	
   413 000002AE 89C6                    	mov		si,ax
   414 000002B0 29D6                    	sub		si,dx
   415 000002B2 56                      	push	si		;coloca a abcisa xc-x na pilha			
   416 000002B3 89DE                    	mov		si,bx
   417 000002B5 29CE                    	sub		si,cx
   418 000002B7 56                      	push    si		;coloca a ordenada yc-y na pilha
   419 000002B8 89C6                    	mov		si,ax
   420 000002BA 29D6                    	sub		si,dx
   421 000002BC 56                      	push	si		;coloca a abcisa xc-x na pilha	
   422 000002BD 89DE                    	mov		si,bx
   423 000002BF 01CE                    	add		si,cx
   424 000002C1 56                      	push    si		;coloca a ordenada yc+y na pilha	
   425 000002C2 E82900                  	call	line
   426                                  	
   427 000002C5 89C6                    	mov		si,ax
   428 000002C7 29CE                    	sub		si,cx
   429 000002C9 56                      	push	si		;coloca a abcisa xc-y na pilha			
   430 000002CA 89DE                    	mov		si,bx
   431 000002CC 29D6                    	sub		si,dx
   432 000002CE 56                      	push    si		;coloca a ordenada yc-x na pilha
   433 000002CF 89C6                    	mov		si,ax
   434 000002D1 29CE                    	sub		si,cx
   435 000002D3 56                      	push	si		;coloca a abcisa xc-y na pilha	
   436 000002D4 89DE                    	mov		si,bx
   437 000002D6 01D6                    	add		si,dx
   438 000002D8 56                      	push    si		;coloca a ordenada yc+x na pilha	
   439 000002D9 E81200                  	call	line
   440                                  	
   441 000002DC 39D1                    	cmp		cx,dx
   442 000002DE 7203                    	jb		fim_full_circle  ;se cx (y) est� abaixo de dx (x), termina     
   443 000002E0 E979FF                  	jmp		stay_full		;se cx (y) est� acima de dx (x), continua no loop
   444                                  	
   445                                  	
   446                                  fim_full_circle:
   447 000002E3 5F                      	pop		di
   448 000002E4 5E                      	pop		si
   449 000002E5 5A                      	pop		dx
   450 000002E6 59                      	pop		cx
   451 000002E7 5B                      	pop		bx
   452 000002E8 58                      	pop		ax
   453 000002E9 9D                      	popf
   454 000002EA 5D                      	pop		bp
   455 000002EB C20600                  	ret		6
   456                                  
   457                                  line:
   458 000002EE 55                          push		bp
   459 000002EF 89E5                        mov		bp,sp
   460 000002F1 9C                          pushf                        ;coloca os flags na pilha
   461 000002F2 50                          push 		ax
   462 000002F3 53                          push 		bx
   463 000002F4 51                          push		cx
   464 000002F5 52                          push		dx
   465 000002F6 56                          push		si
   466 000002F7 57                          push		di
   467 000002F8 8B460A                      mov		ax,[bp+10]   ; resgata os valores das coordenadas
   468 000002FB 8B5E08                      mov		bx,[bp+8]    ; resgata os valores das coordenadas
   469 000002FE 8B4E06                      mov		cx,[bp+6]    ; resgata os valores das coordenadas
   470 00000301 8B5604                      mov		dx,[bp+4]    ; resgata os valores das coordenadas
   471 00000304 39C8                        cmp		ax,cx
   472 00000306 7408                        je		line2
   473 00000308 721C                        jb		line1
   474 0000030A 91                          xchg		ax,cx
   475 0000030B 87DA                        xchg		bx,dx
   476 0000030D E91600                      jmp		line1
   477                                  line2:		; deltax=0
   478 00000310 39D3                        cmp		bx,dx  ;subtrai dx de bx
   479 00000312 7202                        jb		line3
   480 00000314 87DA                        xchg		bx,dx        ;troca os valores de bx e dx entre eles
   481                                  line3:	; dx > 
   482 00000316 50                          push		ax
   483 00000317 53                          push		bx
   484 00000318 E811FE                      call 		plot_xy
   485 0000031B 39D3                        cmp		bx,dx
   486 0000031D 7503                        jne		line31
   487 0000031F E9C600                      jmp		fim_line
   488 00000322 43                      line31:		inc		bx
   489 00000323 E9F0FF                      jmp		line3
   490                                  ;deltax <>0
   491                                  line1:
   492                                  ; comparar m�dulos de deltax e deltay sabendo que cx>ax
   493                                  ; cx > ax
   494 00000326 51                          push		cx
   495 00000327 29C1                        sub		cx,ax
   496 00000329 890E[0600]                  mov		[deltax],cx
   497 0000032D 59                          pop		cx
   498 0000032E 52                          push		dx
   499 0000032F 29DA                        sub		dx,bx
   500 00000331 7702                        ja		line32
   501 00000333 F7DA                        neg		dx
   502                                  line32:		
   503 00000335 8916[0800]                  mov		[deltay],dx
   504 00000339 5A                          pop		dx
   505                                  
   506 0000033A 50                          push		ax
   507 0000033B A1[0600]                    mov		ax,[deltax]
   508 0000033E 3B06[0800]                  cmp		ax,[deltay]
   509 00000342 58                          pop		ax
   510 00000343 724D                        jb		line5
   511                                  
   512                                  ; cx > ax e deltax>deltay
   513 00000345 51                          push		cx
   514 00000346 29C1                        sub		cx,ax
   515 00000348 890E[0600]                  mov		[deltax],cx
   516 0000034C 59                          pop		cx
   517 0000034D 52                          push		dx
   518 0000034E 29DA                        sub		dx,bx
   519 00000350 8916[0800]                  mov		[deltay],dx
   520 00000354 5A                          pop		dx
   521                                  
   522 00000355 89C6                        mov		si,ax
   523                                  line4:
   524 00000357 50                          push		ax
   525 00000358 52                          push		dx
   526 00000359 56                          push		si
   527 0000035A 29C6                        sub		si,ax	;(x-x1)
   528 0000035C A1[0800]                    mov		ax,[deltay]
   529 0000035F F7EE                        imul		si
   530 00000361 8B36[0600]                  mov		si,[deltax]		;arredondar
   531 00000365 D1EE                        shr		si,1
   532                                  ; se numerador (DX)>0 soma se <0 subtrai
   533 00000367 81FA0000                    cmp		dx,0
   534 0000036B 7C09                        jl		ar1
   535 0000036D 01F0                        add		ax,si
   536 0000036F 81D20000                    adc		dx,0
   537 00000373 E90600                      jmp		arc1
   538 00000376 29F0                    ar1:		sub		ax,si
   539 00000378 81DA0000                    sbb		dx,0
   540                                  arc1:
   541 0000037C F73E[0600]                  idiv		word [deltax]
   542 00000380 01D8                        add		ax,bx
   543 00000382 5E                          pop		si
   544 00000383 56                          push		si
   545 00000384 50                          push		ax
   546 00000385 E8A4FD                      call		plot_xy
   547 00000388 5A                          pop		dx
   548 00000389 58                          pop		ax
   549 0000038A 39CE                        cmp		si,cx
   550 0000038C 745A                        je		fim_line
   551 0000038E 46                          inc		si
   552 0000038F E9C5FF                      jmp		line4
   553                                  
   554 00000392 39D3                    line5:		cmp		bx,dx
   555 00000394 7203                        jb 		line7
   556 00000396 91                          xchg		ax,cx
   557 00000397 87DA                        xchg		bx,dx
   558                                  line7:
   559 00000399 51                          push		cx
   560 0000039A 29C1                        sub		cx,ax
   561 0000039C 890E[0600]                  mov		[deltax],cx
   562 000003A0 59                          pop		cx
   563 000003A1 52                          push		dx
   564 000003A2 29DA                        sub		dx,bx
   565 000003A4 8916[0800]                  mov		[deltay],dx
   566 000003A8 5A                          pop		dx
   567                                  
   568                                  
   569                                  
   570 000003A9 89DE                        mov		si,bx
   571                                  line6:
   572 000003AB 52                          push		dx
   573 000003AC 56                          push		si
   574 000003AD 50                          push		ax
   575 000003AE 29DE                        sub		si,bx	;(y-y1)
   576 000003B0 A1[0600]                    mov		ax,[deltax]
   577 000003B3 F7EE                        imul		si
   578 000003B5 8B36[0800]                  mov		si,[deltay]		;arredondar
   579 000003B9 D1EE                        shr		si,1
   580                                  ; se numerador (DX)>0 soma se <0 subtrai
   581 000003BB 81FA0000                    cmp		dx,0
   582 000003BF 7C09                        jl		ar2
   583 000003C1 01F0                        add		ax,si
   584 000003C3 81D20000                    adc		dx,0
   585 000003C7 E90600                      jmp		arc2
   586 000003CA 29F0                    ar2:		sub		ax,si
   587 000003CC 81DA0000                    sbb		dx,0
   588                                  arc2:
   589 000003D0 F73E[0800]                  idiv		word [deltay]
   590 000003D4 89C7                        mov		di,ax
   591 000003D6 58                          pop		ax
   592 000003D7 01C7                        add		di,ax
   593 000003D9 5E                          pop		si
   594 000003DA 57                          push		di
   595 000003DB 56                          push		si
   596 000003DC E84DFD                      call		plot_xy
   597 000003DF 5A                          pop		dx
   598 000003E0 39D6                        cmp		si,dx
   599 000003E2 7404                        je		fim_line
   600 000003E4 46                          inc		si
   601 000003E5 E9C3FF                      jmp		line6
   602                                  
   603                                  fim_line:
   604 000003E8 5F                          pop		di
   605 000003E9 5E                          pop		si
   606 000003EA 5A                          pop		dx
   607 000003EB 59                          pop		cx
   608 000003EC 5B                          pop		bx
   609 000003ED 58                          pop		ax
   610 000003EE 9D                          popf
   611 000003EF 5D                          pop		bp
   612 000003F0 C20800                      ret		8
   613                                  
   614                                  
   615                                  ; funcao que aguarda um tempo pre-determinado
   616                                  delay:
   617 000003F3 B9C800                  	mov cx, 200; Carrega o valor 3 no registrador cx (contador para loop)
   618                                  del2:
   619 000003F6 51                      	push cx; Coloca cx na pilha para usa-lo em outro loop
   620 000003F7 B90000                  	mov cx, 0; Zera cx
   621                                  del1:
   622 000003FA E2FE                    	loop del1; No loop del1, cx eh decrementado seguidamente ate que volte a ser zero
   623 000003FC 59                      	pop cx; Recupera cx da pilha
   624 000003FD E2F7                    	loop del2; No loop del2, cx eh decrementado seguidamente ate que seja zero
   625 000003FF C3                      	ret
   626                                  
   627                                  
   628                                  segment data
   629                                  
   630 00000000 0F                      cor		db		branco_intenso
   631                                  
   632                                  ;	I R G B COR
   633                                  ;	0 0 0 0 preto
   634                                  ;	0 0 0 1 azul
   635                                  ;	0 0 1 0 verde
   636                                  ;	0 0 1 1 cyan
   637                                  ;	0 1 0 0 vermelho
   638                                  ;	0 1 0 1 magenta
   639                                  ;	0 1 1 0 marrom
   640                                  ;	0 1 1 1 branco
   641                                  ;	1 0 0 0 cinza
   642                                  ;	1 0 0 1 azul claro
   643                                  ;	1 0 1 0 verde claro
   644                                  ;	1 0 1 1 cyan claro
   645                                  ;	1 1 0 0 rosa
   646                                  ;	1 1 0 1 magenta claro
   647                                  ;	1 1 1 0 amarelo
   648                                  ;	1 1 1 1 branco intenso
   649                                  
   650                                  preto		equ		0
   651                                  azul		equ		1
   652                                  verde		equ		2
   653                                  cyan		equ		3
   654                                  vermelho	equ		4
   655                                  magenta		equ		5
   656                                  marrom		equ		6
   657                                  branco		equ		7
   658                                  cinza		equ		8
   659                                  azul_claro	equ		9
   660                                  verde_claro	equ		10
   661                                  cyan_claro	equ		11
   662                                  rosa		equ		12
   663                                  magenta_claro	equ		13
   664                                  amarelo		equ		14
   665                                  branco_intenso	equ		15
   666                                  
   667 00000001 00                      modo_anterior	db		0
   668 00000002 0000                    linha   	dw  		0
   669 00000004 0000                    coluna  	dw  		0
   670 00000006 0000                    deltax		dw		0
   671 00000008 0000                    deltay		dw		0	
   672                                  
   673 0000000A 416272697224            Abrir		db		'Abrir$'
   674 00000010 46495231                FIR1		db		'FIR1'
   675 00000014 46495232                FIR2		db		'FIR2'
   676 00000018 46495233                FIR3		db		'FIR3'
   677 0000001C 486973746F6772616D-     Histograma	db		'Histograma'
   678 00000025 61                 
   679 00000026 53616972                Sair		db		'Sair'
   680                                  
   681                                  segment stack stack
   682 00000000 <res 00000100>              resb 256
   683                                  stacktop:
